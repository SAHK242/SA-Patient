// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.0
// source: common/common.proto

package gcommon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Module int32

const (
	Module_MODULE_UNSPECIFIED Module = 0
	Module_MODULE_AUTH        Module = 1
)

// Enum value maps for Module.
var (
	Module_name = map[int32]string{
		0: "MODULE_UNSPECIFIED",
		1: "MODULE_AUTH",
	}
	Module_value = map[string]int32{
		"MODULE_UNSPECIFIED": 0,
		"MODULE_AUTH":        1,
	}
)

func (x Module) Enum() *Module {
	p := new(Module)
	*p = x
	return p
}

func (x Module) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Module) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[0].Descriptor()
}

func (Module) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[0]
}

func (x Module) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Module.Descriptor instead.
func (Module) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_STATUS_INACTIVE    Status = 1
	Status_STATUS_ACTIVE      Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_INACTIVE",
		2: "STATUS_ACTIVE",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_INACTIVE":    1,
		"STATUS_ACTIVE":      2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

type RecordState int32

const (
	RecordState_RECORD_STATE_UNSPECIFIED RecordState = 0
	RecordState_RECORD_STATE_ACTIVE      RecordState = 1
	RecordState_RECORD_STATE_DELETED     RecordState = 2
)

// Enum value maps for RecordState.
var (
	RecordState_name = map[int32]string{
		0: "RECORD_STATE_UNSPECIFIED",
		1: "RECORD_STATE_ACTIVE",
		2: "RECORD_STATE_DELETED",
	}
	RecordState_value = map[string]int32{
		"RECORD_STATE_UNSPECIFIED": 0,
		"RECORD_STATE_ACTIVE":      1,
		"RECORD_STATE_DELETED":     2,
	}
)

func (x RecordState) Enum() *RecordState {
	p := new(RecordState)
	*p = x
	return p
}

func (x RecordState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[2].Descriptor()
}

func (RecordState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[2]
}

func (x RecordState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordState.Descriptor instead.
func (RecordState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{2}
}

type AccountState int32

const (
	//  -- 1: active, 2: inactive, 3: locked - when create new account, default is locked and send email to user to activate, 4 - super admin- locked, 5 - super admin - active
	AccountState_ACCOUNT_STATE_UNSPECIFIED        AccountState = 0
	AccountState_ACCOUNT_STATE_ACTIVE             AccountState = 1
	AccountState_ACCOUNT_STATE_INACTIVE           AccountState = 2
	AccountState_ACCOUNT_STATE_LOCKED             AccountState = 3
	AccountState_ACCOUNT_STATE_SUPER_ADMIN_LOCKED AccountState = 4
	AccountState_ACCOUNT_STATE_SUPER_ADMIN_ACTIVE AccountState = 5
)

// Enum value maps for AccountState.
var (
	AccountState_name = map[int32]string{
		0: "ACCOUNT_STATE_UNSPECIFIED",
		1: "ACCOUNT_STATE_ACTIVE",
		2: "ACCOUNT_STATE_INACTIVE",
		3: "ACCOUNT_STATE_LOCKED",
		4: "ACCOUNT_STATE_SUPER_ADMIN_LOCKED",
		5: "ACCOUNT_STATE_SUPER_ADMIN_ACTIVE",
	}
	AccountState_value = map[string]int32{
		"ACCOUNT_STATE_UNSPECIFIED":        0,
		"ACCOUNT_STATE_ACTIVE":             1,
		"ACCOUNT_STATE_INACTIVE":           2,
		"ACCOUNT_STATE_LOCKED":             3,
		"ACCOUNT_STATE_SUPER_ADMIN_LOCKED": 4,
		"ACCOUNT_STATE_SUPER_ADMIN_ACTIVE": 5,
	}
)

func (x AccountState) Enum() *AccountState {
	p := new(AccountState)
	*p = x
	return p
}

func (x AccountState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[3].Descriptor()
}

func (AccountState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[3]
}

func (x AccountState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountState.Descriptor instead.
func (AccountState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{3}
}

type TimeUnit int32

const (
	TimeUnit_TIME_UNIT_UNSPECIFIED TimeUnit = 0
	TimeUnit_TIME_UNIT_DAY         TimeUnit = 1
	TimeUnit_TIME_UNIT_WEEK        TimeUnit = 2
	TimeUnit_TIME_UNIT_MONTH       TimeUnit = 3
	TimeUnit_TIME_UNIT_QUARTER     TimeUnit = 4
	TimeUnit_TIME_UNIT_YEAR        TimeUnit = 5
	TimeUnit_TIME_UNIT_SECOND      TimeUnit = 6
	TimeUnit_TIME_UNIT_MINUTE      TimeUnit = 7
	TimeUnit_TIME_UNIT_HOUR        TimeUnit = 8
)

// Enum value maps for TimeUnit.
var (
	TimeUnit_name = map[int32]string{
		0: "TIME_UNIT_UNSPECIFIED",
		1: "TIME_UNIT_DAY",
		2: "TIME_UNIT_WEEK",
		3: "TIME_UNIT_MONTH",
		4: "TIME_UNIT_QUARTER",
		5: "TIME_UNIT_YEAR",
		6: "TIME_UNIT_SECOND",
		7: "TIME_UNIT_MINUTE",
		8: "TIME_UNIT_HOUR",
	}
	TimeUnit_value = map[string]int32{
		"TIME_UNIT_UNSPECIFIED": 0,
		"TIME_UNIT_DAY":         1,
		"TIME_UNIT_WEEK":        2,
		"TIME_UNIT_MONTH":       3,
		"TIME_UNIT_QUARTER":     4,
		"TIME_UNIT_YEAR":        5,
		"TIME_UNIT_SECOND":      6,
		"TIME_UNIT_MINUTE":      7,
		"TIME_UNIT_HOUR":        8,
	}
)

func (x TimeUnit) Enum() *TimeUnit {
	p := new(TimeUnit)
	*p = x
	return p
}

func (x TimeUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[4].Descriptor()
}

func (TimeUnit) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[4]
}

func (x TimeUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeUnit.Descriptor instead.
func (TimeUnit) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{4}
}

type WeekDay int32

const (
	WeekDay_WEEK_DAY_UNSPECIFIED WeekDay = 0
	WeekDay_WEEK_DAY_SUNDAY      WeekDay = 1
	WeekDay_WEEK_DAY_MONDAY      WeekDay = 2
	WeekDay_WEEK_DAY_TUESDAY     WeekDay = 3
	WeekDay_WEEK_DAY_WEDNESDAY   WeekDay = 4
	WeekDay_WEEK_DAY_THURSDAY    WeekDay = 5
	WeekDay_WEEK_DAY_FRIDAY      WeekDay = 6
	WeekDay_WEEK_DAY_SATURDAY    WeekDay = 7
)

// Enum value maps for WeekDay.
var (
	WeekDay_name = map[int32]string{
		0: "WEEK_DAY_UNSPECIFIED",
		1: "WEEK_DAY_SUNDAY",
		2: "WEEK_DAY_MONDAY",
		3: "WEEK_DAY_TUESDAY",
		4: "WEEK_DAY_WEDNESDAY",
		5: "WEEK_DAY_THURSDAY",
		6: "WEEK_DAY_FRIDAY",
		7: "WEEK_DAY_SATURDAY",
	}
	WeekDay_value = map[string]int32{
		"WEEK_DAY_UNSPECIFIED": 0,
		"WEEK_DAY_SUNDAY":      1,
		"WEEK_DAY_MONDAY":      2,
		"WEEK_DAY_TUESDAY":     3,
		"WEEK_DAY_WEDNESDAY":   4,
		"WEEK_DAY_THURSDAY":    5,
		"WEEK_DAY_FRIDAY":      6,
		"WEEK_DAY_SATURDAY":    7,
	}
)

func (x WeekDay) Enum() *WeekDay {
	p := new(WeekDay)
	*p = x
	return p
}

func (x WeekDay) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeekDay) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[5].Descriptor()
}

func (WeekDay) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[5]
}

func (x WeekDay) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeekDay.Descriptor instead.
func (WeekDay) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{5}
}

type Month int32

const (
	Month_MONTH_UNSPECIFIED Month = 0
	Month_MONTH_JANUARY     Month = 1
	Month_MONTH_FEBRUARY    Month = 2
	Month_MONTH_MARCH       Month = 3
	Month_MONTH_APRIL       Month = 4
	Month_MONTH_MAY         Month = 5
	Month_MONTH_JUNE        Month = 6
	Month_MONTH_JULY        Month = 7
	Month_MONTH_AUGUST      Month = 8
	Month_MONTH_SEPTEMBER   Month = 9
	Month_MONTH_OCTOBER     Month = 10
	Month_MONTH_NOVEMBER    Month = 11
	Month_MONTH_DECEMBER    Month = 12
)

// Enum value maps for Month.
var (
	Month_name = map[int32]string{
		0:  "MONTH_UNSPECIFIED",
		1:  "MONTH_JANUARY",
		2:  "MONTH_FEBRUARY",
		3:  "MONTH_MARCH",
		4:  "MONTH_APRIL",
		5:  "MONTH_MAY",
		6:  "MONTH_JUNE",
		7:  "MONTH_JULY",
		8:  "MONTH_AUGUST",
		9:  "MONTH_SEPTEMBER",
		10: "MONTH_OCTOBER",
		11: "MONTH_NOVEMBER",
		12: "MONTH_DECEMBER",
	}
	Month_value = map[string]int32{
		"MONTH_UNSPECIFIED": 0,
		"MONTH_JANUARY":     1,
		"MONTH_FEBRUARY":    2,
		"MONTH_MARCH":       3,
		"MONTH_APRIL":       4,
		"MONTH_MAY":         5,
		"MONTH_JUNE":        6,
		"MONTH_JULY":        7,
		"MONTH_AUGUST":      8,
		"MONTH_SEPTEMBER":   9,
		"MONTH_OCTOBER":     10,
		"MONTH_NOVEMBER":    11,
		"MONTH_DECEMBER":    12,
	}
)

func (x Month) Enum() *Month {
	p := new(Month)
	*p = x
	return p
}

func (x Month) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Month) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[6].Descriptor()
}

func (Month) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[6]
}

func (x Month) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Month.Descriptor instead.
func (Month) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{6}
}

type LogicalOp int32

const (
	LogicalOp_LOGICAL_OP_UNSPECIFIED LogicalOp = 0
	LogicalOp_LOGICAL_OP_ALL         LogicalOp = 1 // all of the conditions must be met
	LogicalOp_LOGICAL_OP_ANY         LogicalOp = 2 // any of the conditions must be met
)

// Enum value maps for LogicalOp.
var (
	LogicalOp_name = map[int32]string{
		0: "LOGICAL_OP_UNSPECIFIED",
		1: "LOGICAL_OP_ALL",
		2: "LOGICAL_OP_ANY",
	}
	LogicalOp_value = map[string]int32{
		"LOGICAL_OP_UNSPECIFIED": 0,
		"LOGICAL_OP_ALL":         1,
		"LOGICAL_OP_ANY":         2,
	}
)

func (x LogicalOp) Enum() *LogicalOp {
	p := new(LogicalOp)
	*p = x
	return p
}

func (x LogicalOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalOp) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[7].Descriptor()
}

func (LogicalOp) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[7]
}

func (x LogicalOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalOp.Descriptor instead.
func (LogicalOp) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{7}
}

type ValidationLevel int32

const (
	ValidationLevel_VALIDATION_LEVEL_UNSPECIFIED ValidationLevel = 0
	ValidationLevel_VALIDATION_LEVEL_WARNING     ValidationLevel = 1
	ValidationLevel_VALIDATION_LEVEL_ERROR       ValidationLevel = 2
	ValidationLevel_VALIDATION_LEVEL_INFO        ValidationLevel = 3
)

// Enum value maps for ValidationLevel.
var (
	ValidationLevel_name = map[int32]string{
		0: "VALIDATION_LEVEL_UNSPECIFIED",
		1: "VALIDATION_LEVEL_WARNING",
		2: "VALIDATION_LEVEL_ERROR",
		3: "VALIDATION_LEVEL_INFO",
	}
	ValidationLevel_value = map[string]int32{
		"VALIDATION_LEVEL_UNSPECIFIED": 0,
		"VALIDATION_LEVEL_WARNING":     1,
		"VALIDATION_LEVEL_ERROR":       2,
		"VALIDATION_LEVEL_INFO":        3,
	}
)

func (x ValidationLevel) Enum() *ValidationLevel {
	p := new(ValidationLevel)
	*p = x
	return p
}

func (x ValidationLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[8].Descriptor()
}

func (ValidationLevel) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[8]
}

func (x ValidationLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationLevel.Descriptor instead.
func (ValidationLevel) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{8}
}

type Gender int32

const (
	Gender_GENDER_UNSPECIFIED Gender = 0
	Gender_GENDER_MALE        Gender = 1
	Gender_GENDER_FEMALE      Gender = 2
	Gender_GENDER_OTHER       Gender = 3
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "GENDER_UNSPECIFIED",
		1: "GENDER_MALE",
		2: "GENDER_FEMALE",
		3: "GENDER_OTHER",
	}
	Gender_value = map[string]int32{
		"GENDER_UNSPECIFIED": 0,
		"GENDER_MALE":        1,
		"GENDER_FEMALE":      2,
		"GENDER_OTHER":       3,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[9].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[9]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{9}
}

type PatientType int32

const (
	PatientType_PATIENT_TYPE_UNSPECIFIED PatientType = 0
	PatientType_PATIENT_TYPE_INPATIENT   PatientType = 1
	PatientType_PATIENT_TYPE_OUTPATIENT  PatientType = 2
)

// Enum value maps for PatientType.
var (
	PatientType_name = map[int32]string{
		0: "PATIENT_TYPE_UNSPECIFIED",
		1: "PATIENT_TYPE_INPATIENT",
		2: "PATIENT_TYPE_OUTPATIENT",
	}
	PatientType_value = map[string]int32{
		"PATIENT_TYPE_UNSPECIFIED": 0,
		"PATIENT_TYPE_INPATIENT":   1,
		"PATIENT_TYPE_OUTPATIENT":  2,
	}
)

func (x PatientType) Enum() *PatientType {
	p := new(PatientType)
	*p = x
	return p
}

func (x PatientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PatientType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[10].Descriptor()
}

func (PatientType) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[10]
}

func (x PatientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PatientType.Descriptor instead.
func (PatientType) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{10}
}

// This message should not be used as an input parameter in the gRPC services.
// Instead of that, it is supposed to be used as a composite field in gRPC service's inputs
//
// For example:
// service UserService {
//    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {};
// }
//
// message ListUsersRequest {
//    common.Pageable pageable = 1;
//    string first_name = 2;
// }
//
// @field page starts from 1. implementer should add a normalization step to make sure data validity
// @field size page size, must greater or equal to 1. implementer should add a normalization step to make sure data validity
// @field sort support single-field sorting only. implementer should define your model for composite sorting
// @field direction accepts either "asc" or "desc". default to "asc"
// @field paging_ignored instead of defining a separate message for batch querying without pagination, we ignore the `page` and `size` params by setting the field to true. default to false
type Pageable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Size          int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Sort          string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort"`
	PagingIgnored bool   `protobuf:"varint,5,opt,name=paging_ignored,json=pagingIgnored,proto3" json:"paging_ignored"`
}

func (x *Pageable) Reset() {
	*x = Pageable{}
	mi := &file_common_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pageable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pageable) ProtoMessage() {}

func (x *Pageable) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pageable.ProtoReflect.Descriptor instead.
func (*Pageable) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *Pageable) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pageable) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Pageable) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *Pageable) GetPagingIgnored() bool {
	if x != nil {
		return x.PagingIgnored
	}
	return false
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	mi := &file_common_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

func (x *IdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
}

func (x *IdsRequest) Reset() {
	*x = IdsRequest{}
	mi := &file_common_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsRequest) ProtoMessage() {}

func (x *IdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsRequest.ProtoReflect.Descriptor instead.
func (*IdsRequest) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{2}
}

func (x *IdsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_common_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{3}
}

//*
// =========================================================================================================
// =========================================================================================================
// =========================================================================================================
// =========================================================================================================
//
// COMMON RESPONSES
//
// =========================================================================================================
// =========================================================================================================
// =========================================================================================================
// =========================================================================================================
type ErrorDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
}

func (x *ErrorDetail) Reset() {
	*x = ErrorDetail{}
	mi := &file_common_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDetail) ProtoMessage() {}

func (x *ErrorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDetail.ProtoReflect.Descriptor instead.
func (*ErrorDetail) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{4}
}

func (x *ErrorDetail) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ErrorDetail) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// @field code service's custom error code. should be documented and follow the naming convention at
// @field message it is expected to support i18n for clients to use this message directly instead of interpreting via the `code` field
// @field details details about the error. the common use case is to validate request where key presents the invalid field and value give client what wrong with it
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    Code           `protobuf:"varint,1,opt,name=code,proto3,enum=common.Code" json:"code"`
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Details []*ErrorDetail `protobuf:"bytes,3,rep,name=details,proto3" json:"details"`
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_common_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{5}
}

func (x *Error) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_CODE_UNSPECIFIED
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetDetails() []*ErrorDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

// The messing should be used as an composite field in response messages to wrap up pagination metadata
//
// For example,
// service UserService {
//    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {};
// }
//
// message ListUsersResponse {
//    PageMetadata metadata = 1;
//    repeated User items = 2;
// }
//
// @field page when `paging_ignored` (see `Pageable` message above) was set to true, it must be set to 1
// @field size when `paging_ignored` (see `Pageable` message above) was set to true, it must equal to the `total_elements`
// @field total_pages when `paging_ignored` (see `Pageable` message above) was set to true, it must be set to 1
type PageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Size          int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	TotalElements int64 `protobuf:"varint,3,opt,name=total_elements,json=totalElements,proto3" json:"total_elements"`
	TotalPages    int32 `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages"`
	HasNext       bool  `protobuf:"varint,5,opt,name=has_next,json=hasNext,proto3" json:"has_next"`
	HasPrevious   bool  `protobuf:"varint,6,opt,name=has_previous,json=hasPrevious,proto3" json:"has_previous"`
}

func (x *PageMetadata) Reset() {
	*x = PageMetadata{}
	mi := &file_common_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageMetadata) ProtoMessage() {}

func (x *PageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageMetadata.ProtoReflect.Descriptor instead.
func (*PageMetadata) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{6}
}

func (x *PageMetadata) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageMetadata) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageMetadata) GetTotalElements() int64 {
	if x != nil {
		return x.TotalElements
	}
	return 0
}

func (x *PageMetadata) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PageMetadata) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *PageMetadata) GetHasPrevious() bool {
	if x != nil {
		return x.HasPrevious
	}
	return false
}

// Sometimes, a gRPC API simply does not need return any data. You can use the message for that case
//
// For example,
// service UserService {
//    rpc DeleteUser(IdRequest) returns (EmptyResponse) {};
// }
//
// @field error this is defined as an optional field. when being presented, it provides client a signal for API error
type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If success, nothing gets returned. Otherwise, an Error object gets returned
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error"`
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_common_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{7}
}

func (x *EmptyResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ExistenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Exist bool   `protobuf:"varint,2,opt,name=exist,proto3" json:"exist"`
}

func (x *ExistenceResponse) Reset() {
	*x = ExistenceResponse{}
	mi := &file_common_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExistenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistenceResponse) ProtoMessage() {}

func (x *ExistenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistenceResponse.ProtoReflect.Descriptor instead.
func (*ExistenceResponse) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{8}
}

func (x *ExistenceResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExistenceResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type IdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id"`
}

func (x *IdResponse) Reset() {
	*x = IdResponse{}
	mi := &file_common_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdResponse) ProtoMessage() {}

func (x *IdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdResponse.ProtoReflect.Descriptor instead.
func (*IdResponse) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{9}
}

func (x *IdResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *IdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Ids   []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids"`
}

func (x *IdsResponse) Reset() {
	*x = IdsResponse{}
	mi := &file_common_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsResponse) ProtoMessage() {}

func (x *IdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsResponse.ProtoReflect.Descriptor instead.
func (*IdsResponse) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{10}
}

func (x *IdsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *IdsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDate int64 `protobuf:"varint,1,opt,name=from_date,json=fromDate,proto3" json:"from_date"` // in milliseconds
	ToDate   int64 `protobuf:"varint,2,opt,name=to_date,json=toDate,proto3" json:"to_date"`       // in milliseconds
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	mi := &file_common_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{11}
}

func (x *DateRange) GetFromDate() int64 {
	if x != nil {
		return x.FromDate
	}
	return 0
}

func (x *DateRange) GetToDate() int64 {
	if x != nil {
		return x.ToDate
	}
	return 0
}

type OptionalDateRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDate *int64 `protobuf:"varint,1,opt,name=from_date,json=fromDate,proto3,oneof" json:"from_date"`
	ToDate   *int64 `protobuf:"varint,2,opt,name=to_date,json=toDate,proto3,oneof" json:"to_date"`
}

func (x *OptionalDateRange) Reset() {
	*x = OptionalDateRange{}
	mi := &file_common_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionalDateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalDateRange) ProtoMessage() {}

func (x *OptionalDateRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalDateRange.ProtoReflect.Descriptor instead.
func (*OptionalDateRange) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{12}
}

func (x *OptionalDateRange) GetFromDate() int64 {
	if x != nil && x.FromDate != nil {
		return *x.FromDate
	}
	return 0
}

func (x *OptionalDateRange) GetToDate() int64 {
	if x != nil && x.ToDate != nil {
		return *x.ToDate
	}
	return 0
}

type ValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	Name  string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`   // human readable name of the field
	Value string          `protobuf:"bytes,3,opt,name=value,proto3" json:"value"` // value of the field that causes the error
	Error string          `protobuf:"bytes,4,opt,name=error,proto3" json:"error"` // error message
	Level ValidationLevel `protobuf:"varint,5,opt,name=level,proto3,enum=common.ValidationLevel" json:"level"`
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_common_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{13}
}

func (x *ValidationError) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ValidationError) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValidationError) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ValidationError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ValidationError) GetLevel() ValidationLevel {
	if x != nil {
		return x.Level
	}
	return ValidationLevel_VALIDATION_LEVEL_UNSPECIFIED
}

var File_common_common_proto protoreflect.FileDescriptor

var file_common_common_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x12, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6d, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64,
	0x22, 0x1b, 0x0a, 0x09, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a,
	0x0a, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x0e, 0x0a,
	0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x39, 0x0a,
	0x0b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xbc, 0x01, 0x0a,
	0x0c, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x22, 0x43, 0x0a, 0x0d, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x4e, 0x0a, 0x11, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x22, 0x41, 0x0a, 0x0a, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x0b, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x41, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x11,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0f,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x2a, 0x31, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4f,
	0x44, 0x55, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x44, 0x55, 0x4c, 0x45, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x10, 0x01, 0x2a, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x2a, 0x5e, 0x0a,
	0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45,
	0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xc9, 0x01,
	0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x24, 0x0a,
	0x20, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x55, 0x50, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x05, 0x2a, 0xcc, 0x01, 0x0a, 0x08, 0x54, 0x69,
	0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55,
	0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x44,
	0x41, 0x59, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x03, 0x12, 0x15, 0x0a,
	0x11, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x51, 0x55, 0x41, 0x52, 0x54,
	0x45, 0x52, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x59, 0x45, 0x41, 0x52, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4d, 0x49, 0x4e, 0x55,
	0x54, 0x45, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x49,
	0x54, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x08, 0x2a, 0xbe, 0x01, 0x0a, 0x07, 0x57, 0x65, 0x65,
	0x6b, 0x44, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x44, 0x41, 0x59,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x44, 0x41, 0x59, 0x5f, 0x53, 0x55, 0x4e, 0x44, 0x41,
	0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x44, 0x41, 0x59, 0x5f,
	0x4d, 0x4f, 0x4e, 0x44, 0x41, 0x59, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x45, 0x45, 0x4b,
	0x5f, 0x44, 0x41, 0x59, 0x5f, 0x54, 0x55, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12, 0x16,
	0x0a, 0x12, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x44, 0x41, 0x59, 0x5f, 0x57, 0x45, 0x44, 0x4e, 0x45,
	0x53, 0x44, 0x41, 0x59, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x44,
	0x41, 0x59, 0x5f, 0x54, 0x48, 0x55, 0x52, 0x53, 0x44, 0x41, 0x59, 0x10, 0x05, 0x12, 0x13, 0x0a,
	0x0f, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x44, 0x41, 0x59, 0x5f, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59,
	0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x45, 0x45, 0x4b, 0x5f, 0x44, 0x41, 0x59, 0x5f, 0x53,
	0x41, 0x54, 0x55, 0x52, 0x44, 0x41, 0x59, 0x10, 0x07, 0x2a, 0xf8, 0x01, 0x0a, 0x05, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f,
	0x4e, 0x54, 0x48, 0x5f, 0x4a, 0x41, 0x4e, 0x55, 0x41, 0x52, 0x59, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x46, 0x45, 0x42, 0x52, 0x55, 0x41, 0x52, 0x59, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x4d, 0x41, 0x52, 0x43, 0x48,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x41, 0x50, 0x52, 0x49,
	0x4c, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x4d, 0x41, 0x59,
	0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x4a, 0x55, 0x4e, 0x45,
	0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x4a, 0x55, 0x4c, 0x59,
	0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x41, 0x55, 0x47, 0x55,
	0x53, 0x54, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x53, 0x45,
	0x50, 0x54, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x4f, 0x4e,
	0x54, 0x48, 0x5f, 0x4f, 0x43, 0x54, 0x4f, 0x42, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e,
	0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x4e, 0x4f, 0x56, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x0b,
	0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x5f, 0x44, 0x45, 0x43, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x10, 0x0c, 0x2a, 0x4f, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f,
	0x70, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x4f, 0x50, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x4f, 0x50, 0x5f, 0x41, 0x4c, 0x4c, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x49, 0x43, 0x41, 0x4c, 0x5f, 0x4f, 0x50, 0x5f,
	0x41, 0x4e, 0x59, 0x10, 0x02, 0x2a, 0x88, 0x01, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x1c, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03,
	0x2a, 0x56, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x46, 0x45,
	0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x03, 0x2a, 0x64, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x41, 0x54, 0x49, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x54, 0x49, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x41, 0x54, 0x49, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x41, 0x54, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x41, 0x54, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x42, 0x33,
	0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_common_proto_rawDescOnce sync.Once
	file_common_common_proto_rawDescData = file_common_common_proto_rawDesc
)

func file_common_common_proto_rawDescGZIP() []byte {
	file_common_common_proto_rawDescOnce.Do(func() {
		file_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_common_proto_rawDescData)
	})
	return file_common_common_proto_rawDescData
}

var file_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_common_common_proto_goTypes = []any{
	(Module)(0),               // 0: common.Module
	(Status)(0),               // 1: common.Status
	(RecordState)(0),          // 2: common.RecordState
	(AccountState)(0),         // 3: common.AccountState
	(TimeUnit)(0),             // 4: common.TimeUnit
	(WeekDay)(0),              // 5: common.WeekDay
	(Month)(0),                // 6: common.Month
	(LogicalOp)(0),            // 7: common.LogicalOp
	(ValidationLevel)(0),      // 8: common.ValidationLevel
	(Gender)(0),               // 9: common.Gender
	(PatientType)(0),          // 10: common.PatientType
	(*Pageable)(nil),          // 11: common.Pageable
	(*IdRequest)(nil),         // 12: common.IdRequest
	(*IdsRequest)(nil),        // 13: common.IdsRequest
	(*EmptyRequest)(nil),      // 14: common.EmptyRequest
	(*ErrorDetail)(nil),       // 15: common.ErrorDetail
	(*Error)(nil),             // 16: common.Error
	(*PageMetadata)(nil),      // 17: common.PageMetadata
	(*EmptyResponse)(nil),     // 18: common.EmptyResponse
	(*ExistenceResponse)(nil), // 19: common.ExistenceResponse
	(*IdResponse)(nil),        // 20: common.IdResponse
	(*IdsResponse)(nil),       // 21: common.IdsResponse
	(*DateRange)(nil),         // 22: common.DateRange
	(*OptionalDateRange)(nil), // 23: common.OptionalDateRange
	(*ValidationError)(nil),   // 24: common.ValidationError
	(Code)(0),                 // 25: common.Code
}
var file_common_common_proto_depIdxs = []int32{
	25, // 0: common.Error.code:type_name -> common.Code
	15, // 1: common.Error.details:type_name -> common.ErrorDetail
	16, // 2: common.EmptyResponse.error:type_name -> common.Error
	16, // 3: common.ExistenceResponse.error:type_name -> common.Error
	16, // 4: common.IdResponse.error:type_name -> common.Error
	16, // 5: common.IdsResponse.error:type_name -> common.Error
	8,  // 6: common.ValidationError.level:type_name -> common.ValidationLevel
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_common_common_proto_init() }
func file_common_common_proto_init() {
	if File_common_common_proto != nil {
		return
	}
	file_common_error_proto_init()
	file_common_common_proto_msgTypes[7].OneofWrappers = []any{}
	file_common_common_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_common_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_common_proto_goTypes,
		DependencyIndexes: file_common_common_proto_depIdxs,
		EnumInfos:         file_common_common_proto_enumTypes,
		MessageInfos:      file_common_common_proto_msgTypes,
	}.Build()
	File_common_common_proto = out.File
	file_common_common_proto_rawDesc = nil
	file_common_common_proto_goTypes = nil
	file_common_common_proto_depIdxs = nil
}
