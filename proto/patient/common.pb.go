// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.27.0
// source: patient/common.proto

package patient

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	gcommon "patient/proto/gcommon"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	PhoneNumber string              `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number"`
	FirstName   string              `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name"`
	LastName    string              `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name"`
	Address     string              `protobuf:"bytes,5,opt,name=address,proto3" json:"address"`
	DateOfBirth int64               `protobuf:"varint,6,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth"`
	Gender      gcommon.Gender      `protobuf:"varint,7,opt,name=gender,proto3,enum=common.Gender" json:"gender"`
	PatientType gcommon.PatientType `protobuf:"varint,8,opt,name=patient_type,json=patientType,proto3,enum=common.PatientType" json:"patient_type"`
}

func (x *Patient) Reset() {
	*x = Patient{}
	mi := &file_patient_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient) ProtoMessage() {}

func (x *Patient) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient.ProtoReflect.Descriptor instead.
func (*Patient) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{0}
}

func (x *Patient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Patient) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Patient) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Patient) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Patient) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Patient) GetDateOfBirth() int64 {
	if x != nil {
		return x.DateOfBirth
	}
	return 0
}

func (x *Patient) GetGender() gcommon.Gender {
	if x != nil {
		return x.Gender
	}
	return gcommon.Gender(0)
}

func (x *Patient) GetPatientType() gcommon.PatientType {
	if x != nil {
		return x.PatientType
	}
	return gcommon.PatientType(0)
}

type InpatientDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	InpatientId   string   `protobuf:"bytes,2,opt,name=inpatient_id,json=inpatientId,proto3" json:"inpatient_id"`
	AdmissionDate int64    `protobuf:"varint,3,opt,name=admission_date,json=admissionDate,proto3" json:"admission_date"`
	Diagnosis     string   `protobuf:"bytes,4,opt,name=diagnosis,proto3" json:"diagnosis"`
	Sickroom      string   `protobuf:"bytes,5,opt,name=sickroom,proto3" json:"sickroom"`
	DischargeDate int64    `protobuf:"varint,6,opt,name=discharge_date,json=dischargeDate,proto3" json:"discharge_date"`
	Invoice       *Invoice `protobuf:"bytes,7,opt,name=invoice,proto3" json:"invoice"`
	NurseId       string   `protobuf:"bytes,8,opt,name=nurse_id,json=nurseId,proto3" json:"nurse_id"`
	DoctorId      string   `protobuf:"bytes,9,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id"`
}

func (x *InpatientDetail) Reset() {
	*x = InpatientDetail{}
	mi := &file_patient_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InpatientDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InpatientDetail) ProtoMessage() {}

func (x *InpatientDetail) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InpatientDetail.ProtoReflect.Descriptor instead.
func (*InpatientDetail) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{1}
}

func (x *InpatientDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InpatientDetail) GetInpatientId() string {
	if x != nil {
		return x.InpatientId
	}
	return ""
}

func (x *InpatientDetail) GetAdmissionDate() int64 {
	if x != nil {
		return x.AdmissionDate
	}
	return 0
}

func (x *InpatientDetail) GetDiagnosis() string {
	if x != nil {
		return x.Diagnosis
	}
	return ""
}

func (x *InpatientDetail) GetSickroom() string {
	if x != nil {
		return x.Sickroom
	}
	return ""
}

func (x *InpatientDetail) GetDischargeDate() int64 {
	if x != nil {
		return x.DischargeDate
	}
	return 0
}

func (x *InpatientDetail) GetInvoice() *Invoice {
	if x != nil {
		return x.Invoice
	}
	return nil
}

func (x *InpatientDetail) GetNurseId() string {
	if x != nil {
		return x.NurseId
	}
	return ""
}

func (x *InpatientDetail) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	InvoiceDate int64   `protobuf:"varint,2,opt,name=invoice_date,json=invoiceDate,proto3" json:"invoice_date"`
	DueDate     int64   `protobuf:"varint,3,opt,name=due_date,json=dueDate,proto3" json:"due_date"`
	TotalAmount float32 `protobuf:"fixed32,4,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	mi := &file_patient_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{2}
}

func (x *Invoice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Invoice) GetInvoiceDate() int64 {
	if x != nil {
		return x.InvoiceDate
	}
	return 0
}

func (x *Invoice) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *Invoice) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type OutpatientDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	OutpatientId string   `protobuf:"bytes,2,opt,name=outpatient_id,json=outpatientId,proto3" json:"outpatient_id"`
	DoctorId     string   `protobuf:"bytes,3,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id"`
	Invoice      *Invoice `protobuf:"bytes,4,opt,name=invoice,proto3" json:"invoice"`
}

func (x *OutpatientDetail) Reset() {
	*x = OutpatientDetail{}
	mi := &file_patient_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutpatientDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutpatientDetail) ProtoMessage() {}

func (x *OutpatientDetail) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutpatientDetail.ProtoReflect.Descriptor instead.
func (*OutpatientDetail) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{3}
}

func (x *OutpatientDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OutpatientDetail) GetOutpatientId() string {
	if x != nil {
		return x.OutpatientId
	}
	return ""
}

func (x *OutpatientDetail) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *OutpatientDetail) GetInvoice() *Invoice {
	if x != nil {
		return x.Invoice
	}
	return nil
}

type TreatDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	StartDate       int64            `protobuf:"varint,2,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate         int64            `protobuf:"varint,3,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	Result          string           `protobuf:"bytes,4,opt,name=result,proto3" json:"result"`
	Fee             float32          `protobuf:"fixed32,5,opt,name=fee,proto3" json:"fee"`
	InpatientDetail *InpatientDetail `protobuf:"bytes,6,opt,name=inpatient_detail,json=inpatientDetail,proto3" json:"inpatient_detail"`
}

func (x *TreatDetail) Reset() {
	*x = TreatDetail{}
	mi := &file_patient_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatDetail) ProtoMessage() {}

func (x *TreatDetail) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatDetail.ProtoReflect.Descriptor instead.
func (*TreatDetail) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{4}
}

func (x *TreatDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TreatDetail) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *TreatDetail) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *TreatDetail) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *TreatDetail) GetFee() float32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TreatDetail) GetInpatientDetail() *InpatientDetail {
	if x != nil {
		return x.InpatientDetail
	}
	return nil
}

type TreatMedication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	TreatDetail *TreatDetail `protobuf:"bytes,2,opt,name=treat_detail,json=treatDetail,proto3" json:"treat_detail"`
	Mediation   *Medication  `protobuf:"bytes,3,opt,name=mediation,proto3" json:"mediation"`
	NumOfMed    int32        `protobuf:"varint,4,opt,name=num_of_med,json=numOfMed,proto3" json:"num_of_med"`
}

func (x *TreatMedication) Reset() {
	*x = TreatMedication{}
	mi := &file_patient_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreatMedication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreatMedication) ProtoMessage() {}

func (x *TreatMedication) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreatMedication.ProtoReflect.Descriptor instead.
func (*TreatMedication) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{5}
}

func (x *TreatMedication) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TreatMedication) GetTreatDetail() *TreatDetail {
	if x != nil {
		return x.TreatDetail
	}
	return nil
}

func (x *TreatMedication) GetMediation() *Medication {
	if x != nil {
		return x.Mediation
	}
	return nil
}

func (x *TreatMedication) GetNumOfMed() int32 {
	if x != nil {
		return x.NumOfMed
	}
	return 0
}

type Medication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Price       float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price"`
	ExpiredDate int64   `protobuf:"varint,4,opt,name=expired_date,json=expiredDate,proto3" json:"expired_date"`
}

func (x *Medication) Reset() {
	*x = Medication{}
	mi := &file_patient_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Medication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medication) ProtoMessage() {}

func (x *Medication) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Medication.ProtoReflect.Descriptor instead.
func (*Medication) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{6}
}

func (x *Medication) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Medication) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Medication) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Medication) GetExpiredDate() int64 {
	if x != nil {
		return x.ExpiredDate
	}
	return 0
}

type MedicationEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Effect    string      `protobuf:"bytes,2,opt,name=effect,proto3" json:"effect"`
	Mediation *Medication `protobuf:"bytes,3,opt,name=mediation,proto3" json:"mediation"`
}

func (x *MedicationEffect) Reset() {
	*x = MedicationEffect{}
	mi := &file_patient_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MedicationEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicationEffect) ProtoMessage() {}

func (x *MedicationEffect) ProtoReflect() protoreflect.Message {
	mi := &file_patient_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicationEffect.ProtoReflect.Descriptor instead.
func (*MedicationEffect) Descriptor() ([]byte, []int) {
	return file_patient_common_proto_rawDescGZIP(), []int{7}
}

func (x *MedicationEffect) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MedicationEffect) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

func (x *MedicationEffect) GetMediation() *Medication {
	if x != nil {
		return x.Mediation
	}
	return nil
}

var File_patient_common_proto protoreflect.FileDescriptor

var file_patient_common_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0d,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72, 0x74, 0x68,
	0x12, 0x26, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xb0, 0x02, 0x0a, 0x0f, 0x49, 0x6e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x61, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x69, 0x63, 0x6b, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x69, 0x63, 0x6b, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2a, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x75, 0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x90, 0x01, 0x0a, 0x10, 0x4f, 0x75, 0x74, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x61, 0x74, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x22, 0xc6, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x65, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x69, 0x6e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xab, 0x01, 0x0a, 0x0f,
	0x54, 0x72, 0x65, 0x61, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x37, 0x0a, 0x0c, 0x74, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x72, 0x65, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x74, 0x72, 0x65,
	0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x4d, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x0a, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x12, 0x31, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_patient_common_proto_rawDescOnce sync.Once
	file_patient_common_proto_rawDescData = file_patient_common_proto_rawDesc
)

func file_patient_common_proto_rawDescGZIP() []byte {
	file_patient_common_proto_rawDescOnce.Do(func() {
		file_patient_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_patient_common_proto_rawDescData)
	})
	return file_patient_common_proto_rawDescData
}

var file_patient_common_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_patient_common_proto_goTypes = []any{
	(*Patient)(nil),          // 0: patient.Patient
	(*InpatientDetail)(nil),  // 1: patient.InpatientDetail
	(*Invoice)(nil),          // 2: patient.Invoice
	(*OutpatientDetail)(nil), // 3: patient.OutpatientDetail
	(*TreatDetail)(nil),      // 4: patient.TreatDetail
	(*TreatMedication)(nil),  // 5: patient.TreatMedication
	(*Medication)(nil),       // 6: patient.Medication
	(*MedicationEffect)(nil), // 7: patient.MedicationEffect
	(gcommon.Gender)(0),      // 8: common.Gender
	(gcommon.PatientType)(0), // 9: common.PatientType
}
var file_patient_common_proto_depIdxs = []int32{
	8, // 0: patient.Patient.gender:type_name -> common.Gender
	9, // 1: patient.Patient.patient_type:type_name -> common.PatientType
	2, // 2: patient.InpatientDetail.invoice:type_name -> patient.Invoice
	2, // 3: patient.OutpatientDetail.invoice:type_name -> patient.Invoice
	1, // 4: patient.TreatDetail.inpatient_detail:type_name -> patient.InpatientDetail
	4, // 5: patient.TreatMedication.treat_detail:type_name -> patient.TreatDetail
	6, // 6: patient.TreatMedication.mediation:type_name -> patient.Medication
	6, // 7: patient.MedicationEffect.mediation:type_name -> patient.Medication
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_patient_common_proto_init() }
func file_patient_common_proto_init() {
	if File_patient_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_patient_common_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_patient_common_proto_goTypes,
		DependencyIndexes: file_patient_common_proto_depIdxs,
		MessageInfos:      file_patient_common_proto_msgTypes,
	}.Build()
	File_patient_common_proto = out.File
	file_patient_common_proto_rawDesc = nil
	file_patient_common_proto_goTypes = nil
	file_patient_common_proto_depIdxs = nil
}
