// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MedicalHistoriesColumns holds the columns for the "medical_histories" table.
	MedicalHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "reason", Type: field.TypeString},
		{Name: "diagnosis", Type: field.TypeString},
		{Name: "has_treatment", Type: field.TypeBool, Default: false},
		{Name: "has_surgery", Type: field.TypeBool, Default: false},
		{Name: "has_prescription", Type: field.TypeBool, Default: false},
		{Name: "doctor_notes", Type: field.TypeString, Nullable: true},
		{Name: "medical_end_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "updated_by", Type: field.TypeUUID},
		{Name: "patient_id", Type: field.TypeUUID},
	}
	// MedicalHistoriesTable holds the schema information for the "medical_histories" table.
	MedicalHistoriesTable = &schema.Table{
		Name:       "medical_histories",
		Columns:    MedicalHistoriesColumns,
		PrimaryKey: []*schema.Column{MedicalHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "medical_histories_patient_medical_history",
				Columns:    []*schema.Column{MedicalHistoriesColumns[12]},
				RefColumns: []*schema.Column{PatientColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MedicalPrescriptionColumns holds the columns for the "medical_prescription" table.
	MedicalPrescriptionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "prescription_date", Type: field.TypeTime},
		{Name: "fee", Type: field.TypeFloat64, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "medical_history_id", Type: field.TypeUUID},
	}
	// MedicalPrescriptionTable holds the schema information for the "medical_prescription" table.
	MedicalPrescriptionTable = &schema.Table{
		Name:       "medical_prescription",
		Columns:    MedicalPrescriptionColumns,
		PrimaryKey: []*schema.Column{MedicalPrescriptionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "medical_prescription_medical_histories_medical_prescription",
				Columns:    []*schema.Column{MedicalPrescriptionColumns[5]},
				RefColumns: []*schema.Column{MedicalHistoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MedicalSurgeryColumns holds the columns for the "medical_surgery" table.
	MedicalSurgeryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "result", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "fee", Type: field.TypeFloat64, Default: 0},
		{Name: "main_doctor_id", Type: field.TypeUUID},
		{Name: "support_doctor_ids", Type: field.TypeString},
		{Name: "support_nurse_ids", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "updated_by", Type: field.TypeUUID},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "medical_history_id", Type: field.TypeUUID},
	}
	// MedicalSurgeryTable holds the schema information for the "medical_surgery" table.
	MedicalSurgeryTable = &schema.Table{
		Name:       "medical_surgery",
		Columns:    MedicalSurgeryColumns,
		PrimaryKey: []*schema.Column{MedicalSurgeryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "medical_surgery_medical_histories_medical_surgery",
				Columns:    []*schema.Column{MedicalSurgeryColumns[14]},
				RefColumns: []*schema.Column{MedicalHistoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MedicalTreatmentColumns holds the columns for the "medical_treatment" table.
	MedicalTreatmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "result", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "fee", Type: field.TypeFloat64, Default: 0},
		{Name: "main_doctor_id", Type: field.TypeUUID},
		{Name: "support_doctor_ids", Type: field.TypeString},
		{Name: "support_nurse_ids", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "updated_by", Type: field.TypeUUID},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "medical_history_id", Type: field.TypeUUID},
	}
	// MedicalTreatmentTable holds the schema information for the "medical_treatment" table.
	MedicalTreatmentTable = &schema.Table{
		Name:       "medical_treatment",
		Columns:    MedicalTreatmentColumns,
		PrimaryKey: []*schema.Column{MedicalTreatmentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "medical_treatment_medical_histories_medical_treatment",
				Columns:    []*schema.Column{MedicalTreatmentColumns[14]},
				RefColumns: []*schema.Column{MedicalHistoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MedicationColumns holds the columns for the "medication" table.
	MedicationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "effects", Type: field.TypeString},
		{Name: "expired_date", Type: field.TypeTime},
		{Name: "quantity", Type: field.TypeInt64, Default: 0},
		{Name: "price", Type: field.TypeFloat64, Default: 0},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "updated_by", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// MedicationTable holds the schema information for the "medication" table.
	MedicationTable = &schema.Table{
		Name:       "medication",
		Columns:    MedicationColumns,
		PrimaryKey: []*schema.Column{MedicationColumns[0]},
	}
	// PatientColumns holds the columns for the "patient" table.
	PatientColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "phone", Type: field.TypeString},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "gender", Type: field.TypeInt32},
		{Name: "address", Type: field.TypeString},
		{Name: "date_of_birth", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeUUID},
		{Name: "updated_by", Type: field.TypeUUID},
	}
	// PatientTable holds the schema information for the "patient" table.
	PatientTable = &schema.Table{
		Name:       "patient",
		Columns:    PatientColumns,
		PrimaryKey: []*schema.Column{PatientColumns[0]},
	}
	// PrescriptionMedicationColumns holds the columns for the "prescription_medication" table.
	PrescriptionMedicationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "quantity", Type: field.TypeInt64, Default: 0},
		{Name: "prescription_id", Type: field.TypeUUID},
		{Name: "medication_id", Type: field.TypeUUID},
	}
	// PrescriptionMedicationTable holds the schema information for the "prescription_medication" table.
	PrescriptionMedicationTable = &schema.Table{
		Name:       "prescription_medication",
		Columns:    PrescriptionMedicationColumns,
		PrimaryKey: []*schema.Column{PrescriptionMedicationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "prescription_medication_medical_prescription_prescription_medication",
				Columns:    []*schema.Column{PrescriptionMedicationColumns[2]},
				RefColumns: []*schema.Column{MedicalPrescriptionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "prescription_medication_medication_prescription_medication",
				Columns:    []*schema.Column{PrescriptionMedicationColumns[3]},
				RefColumns: []*schema.Column{MedicationColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MedicalHistoriesTable,
		MedicalPrescriptionTable,
		MedicalSurgeryTable,
		MedicalTreatmentTable,
		MedicationTable,
		PatientTable,
		PrescriptionMedicationTable,
	}
)

func init() {
	MedicalHistoriesTable.ForeignKeys[0].RefTable = PatientTable
	MedicalHistoriesTable.Annotation = &entsql.Annotation{
		Table: "medical_histories",
	}
	MedicalPrescriptionTable.ForeignKeys[0].RefTable = MedicalHistoriesTable
	MedicalPrescriptionTable.Annotation = &entsql.Annotation{
		Table: "medical_prescription",
	}
	MedicalSurgeryTable.ForeignKeys[0].RefTable = MedicalHistoriesTable
	MedicalSurgeryTable.Annotation = &entsql.Annotation{
		Table: "medical_surgery",
	}
	MedicalTreatmentTable.ForeignKeys[0].RefTable = MedicalHistoriesTable
	MedicalTreatmentTable.Annotation = &entsql.Annotation{
		Table: "medical_treatment",
	}
	MedicationTable.Annotation = &entsql.Annotation{
		Table: "medication",
	}
	PatientTable.Annotation = &entsql.Annotation{
		Table: "patient",
	}
	PrescriptionMedicationTable.ForeignKeys[0].RefTable = MedicalPrescriptionTable
	PrescriptionMedicationTable.ForeignKeys[1].RefTable = MedicationTable
	PrescriptionMedicationTable.Annotation = &entsql.Annotation{
		Table: "prescription_medication",
	}
}
