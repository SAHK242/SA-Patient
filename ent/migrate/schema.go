// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ExamineDetailsColumns holds the columns for the "examine_details" table.
	ExamineDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ExamineDetailsTable holds the schema information for the "examine_details" table.
	ExamineDetailsTable = &schema.Table{
		Name:       "examine_details",
		Columns:    ExamineDetailsColumns,
		PrimaryKey: []*schema.Column{ExamineDetailsColumns[0]},
	}
	// ExamineMedicationsColumns holds the columns for the "examine_medications" table.
	ExamineMedicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ExamineMedicationsTable holds the schema information for the "examine_medications" table.
	ExamineMedicationsTable = &schema.Table{
		Name:       "examine_medications",
		Columns:    ExamineMedicationsColumns,
		PrimaryKey: []*schema.Column{ExamineMedicationsColumns[0]},
	}
	// InpatientColumns holds the columns for the "inpatient" table.
	InpatientColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "register_date", Type: field.TypeTime},
		{Name: "patient_id", Type: field.TypeUUID},
	}
	// InpatientTable holds the schema information for the "inpatient" table.
	InpatientTable = &schema.Table{
		Name:       "inpatient",
		Columns:    InpatientColumns,
		PrimaryKey: []*schema.Column{InpatientColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inpatient_patient_inpatients",
				Columns:    []*schema.Column{InpatientColumns[2]},
				RefColumns: []*schema.Column{PatientColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InpatientDetailsColumns holds the columns for the "inpatient_details" table.
	InpatientDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// InpatientDetailsTable holds the schema information for the "inpatient_details" table.
	InpatientDetailsTable = &schema.Table{
		Name:       "inpatient_details",
		Columns:    InpatientDetailsColumns,
		PrimaryKey: []*schema.Column{InpatientDetailsColumns[0]},
	}
	// InvoicesColumns holds the columns for the "invoices" table.
	InvoicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// InvoicesTable holds the schema information for the "invoices" table.
	InvoicesTable = &schema.Table{
		Name:       "invoices",
		Columns:    InvoicesColumns,
		PrimaryKey: []*schema.Column{InvoicesColumns[0]},
	}
	// MedicationsColumns holds the columns for the "medications" table.
	MedicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// MedicationsTable holds the schema information for the "medications" table.
	MedicationsTable = &schema.Table{
		Name:       "medications",
		Columns:    MedicationsColumns,
		PrimaryKey: []*schema.Column{MedicationsColumns[0]},
	}
	// MedicationEffectsColumns holds the columns for the "medication_effects" table.
	MedicationEffectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// MedicationEffectsTable holds the schema information for the "medication_effects" table.
	MedicationEffectsTable = &schema.Table{
		Name:       "medication_effects",
		Columns:    MedicationEffectsColumns,
		PrimaryKey: []*schema.Column{MedicationEffectsColumns[0]},
	}
	// OutpatientColumns holds the columns for the "outpatient" table.
	OutpatientColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "register_date", Type: field.TypeTime},
		{Name: "patient_id", Type: field.TypeUUID},
	}
	// OutpatientTable holds the schema information for the "outpatient" table.
	OutpatientTable = &schema.Table{
		Name:       "outpatient",
		Columns:    OutpatientColumns,
		PrimaryKey: []*schema.Column{OutpatientColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "outpatient_patient_outpatients",
				Columns:    []*schema.Column{OutpatientColumns[2]},
				RefColumns: []*schema.Column{PatientColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OutpatientDetailsColumns holds the columns for the "outpatient_details" table.
	OutpatientDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// OutpatientDetailsTable holds the schema information for the "outpatient_details" table.
	OutpatientDetailsTable = &schema.Table{
		Name:       "outpatient_details",
		Columns:    OutpatientDetailsColumns,
		PrimaryKey: []*schema.Column{OutpatientDetailsColumns[0]},
	}
	// PatientColumns holds the columns for the "patient" table.
	PatientColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "gender", Type: field.TypeInt32},
		{Name: "address", Type: field.TypeString},
		{Name: "date_of_birth", Type: field.TypeTime},
		{Name: "current_patient_type", Type: field.TypeInt32, Default: 2},
	}
	// PatientTable holds the schema information for the "patient" table.
	PatientTable = &schema.Table{
		Name:       "patient",
		Columns:    PatientColumns,
		PrimaryKey: []*schema.Column{PatientColumns[0]},
	}
	// TreatDetailsColumns holds the columns for the "treat_details" table.
	TreatDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// TreatDetailsTable holds the schema information for the "treat_details" table.
	TreatDetailsTable = &schema.Table{
		Name:       "treat_details",
		Columns:    TreatDetailsColumns,
		PrimaryKey: []*schema.Column{TreatDetailsColumns[0]},
	}
	// TreatMedicationsColumns holds the columns for the "treat_medications" table.
	TreatMedicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// TreatMedicationsTable holds the schema information for the "treat_medications" table.
	TreatMedicationsTable = &schema.Table{
		Name:       "treat_medications",
		Columns:    TreatMedicationsColumns,
		PrimaryKey: []*schema.Column{TreatMedicationsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ExamineDetailsTable,
		ExamineMedicationsTable,
		InpatientTable,
		InpatientDetailsTable,
		InvoicesTable,
		MedicationsTable,
		MedicationEffectsTable,
		OutpatientTable,
		OutpatientDetailsTable,
		PatientTable,
		TreatDetailsTable,
		TreatMedicationsTable,
	}
)

func init() {
	InpatientTable.ForeignKeys[0].RefTable = PatientTable
	InpatientTable.Annotation = &entsql.Annotation{
		Table: "inpatient",
	}
	OutpatientTable.ForeignKeys[0].RefTable = PatientTable
	OutpatientTable.Annotation = &entsql.Annotation{
		Table: "outpatient",
	}
	PatientTable.Annotation = &entsql.Annotation{
		Table: "patient",
	}
}
